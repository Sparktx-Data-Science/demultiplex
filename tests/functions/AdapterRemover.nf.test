nextflow_function {
    name "Test AdapterRemover.removeAdaptersFromSampleSheet"
    function "AdapterRemover.removeAdaptersFromSampleSheet"

    test("Should recognize and remove adapters") {
        when {
            function {
                '''
                input[0] = """[Header]
Sample_ID,Sample_Name,Description
Lane,Sample_ID,Sample_Name,index,index2
1,sample1,Sample One,AAAAAAAA,TTTTTTTT
AdapterRead1,ACGTACGT
[Data]
Lane,Sample_ID,Sample_Name,index,index2
1,sample1,Sample One,AAAAAAAA,TTTTTTTT"""
                '''
            }
        }

        then {
            // Output should not contain adapter line
            assert function.success
            assert function.result != null
            assert !function.result.contains("AdapterRead1,ACGTACGT")
            assert function.result.contains("[Header]")
            assert function.result.contains("[Data]")
        }
    }

    test("Should recognize adapter with trailing comma") {
        when {
            function {
                '''
                input[0] = """[Header]
Sample_ID,Sample_Name,Description
Lane,Sample_ID,Sample_Name,index,index2
1,sample1,Sample One,AAAAAAAA,TTTTTTTT
Adapter,ACGTACGT,
[Data]
Lane,Sample_ID,Sample_Name,index,index2
1,sample1,Sample One,AAAAAAAA,TTTTTTTT"""
                '''
            }
        }

        then {
            // Output should not contain adapter line
            assert function.success
            assert function.result != null
            assert !function.result.contains("Adapter,ACGTACGT,")
            assert function.result.contains("[Header]")
            assert function.result.contains("[Data]")
        }
    }

    test("Should show info message when no adapters") {
        when {
            function {
                '''
                input[0] = """[Header]
Sample_ID,Sample_Name,Description
Lane,Sample_ID,Sample_Name,index,index2
1,sample1,Sample One,AAAAAAAA,TTTTTTTT
[Data]
Lane,Sample_ID,Sample_Name,index,index2
1,sample1,Sample One,AAAAAAAA,TTTTTTTT"""
                '''
            }
        }

        then {
            // Should succeed and print info message
            assert function.success
            assert function.result != null
            assert function.stdout.toString().contains("[INFO] Parameter 'remove_adapter' was set to true but no adapters were found in samplesheet")
        }
    }
}
