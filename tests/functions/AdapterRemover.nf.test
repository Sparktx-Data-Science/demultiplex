nextflow_function {
    name "Test AdapterRemover.removeAdaptersFromSampleSheet"

    test("Should recognize and remove adapters in 'AdapterRead1,ACGTACGT' format (without trailing comma)") {
        function "AdapterRemover.removeAdaptersFromSampleSheet"

        // Read samplesheet from file
        def samplesheetPath = "${projectDir}/tests/data/samplesheets/without_trailing_comma.csv"
        def expectedOutputPath = "${projectDir}/tests/data/samplesheets/expected_without_trailing_comma.csv"

        when {
            function {
                """
                // Now call the method with the samplesheet content
                def samplesheet = new File("${samplesheetPath}").text
                return AdapterRemover.removeAdaptersFromSampleSheet(samplesheet)
                """
            }
        }

        then {
            def expectedOutput = new File(expectedOutputPath).text
            assert function.result.trim() == expectedOutput.trim()
        }
    }

    test("Should recognize and remove adapters in 'Adapter,ACGTACGT,' format (with trailing comma)") {
        function "AdapterRemover.removeAdaptersFromSampleSheet"

        // Read samplesheet from file
        def samplesheetPath = "${projectDir}/tests/data/samplesheets/with_trailing_comma.csv"
        def expectedOutputPath = "${projectDir}/tests/data/samplesheets/expected_with_trailing_comma.csv"

        when {
            function {
                """
                // Now call the method with the samplesheet content
                def samplesheet = new File("${samplesheetPath}").text
                return AdapterRemover.removeAdaptersFromSampleSheet(samplesheet)
                """
            }
        }

        then {
            def expectedOutput = new File(expectedOutputPath).text
            assert function.result.trim() == expectedOutput.trim()
        }
    }

    test("Should show info message when no adapters are found") {
        function "AdapterRemover.removeAdaptersFromSampleSheet"

        // Read samplesheet from file
        def samplesheetPath = "${projectDir}/tests/data/samplesheets/no_adapters.csv"

        when {
            function {
                """
                // Now call the method with the samplesheet content
                def samplesheet = new File("${samplesheetPath}").text
                return AdapterRemover.removeAdaptersFromSampleSheet(samplesheet)
                """
            }
        }

        then {
            def samplesheet = new File(samplesheetPath).text
            assert function.result.trim() == samplesheet.trim() + '\n'

            // Note: We can't easily test the printed info message in nf-test
            // as it doesn't provide a way to capture stdout
        }
    }
}
